/*  public/flashmem.h   */

#if !defined _PUBLIC_FLASHMEM_H && defined KERNEL
#define _PUBLIC_FLASHMEM_H
/*
 * УЧЁТ РАСПРЕДЕЛЕНИЯ ПАМЯТИ РПЗУ (flash-памяти типа NOR).
 *
 * При конфигурировани целевого образа ОСРВ в разделе "Debug" ("Средства отладки")
 * можно нажать кнопку "Flash memory" ("Память в РПЗУ") и после этого описать
 * массив областей памяти в РПЗУ. Для одной области указывается её
 * имя, смещение относительно начала памяти РПЗУ в байтах, причём это смещение должно
 * быть кратно размеру сектора памяти РПЗУ, и число секторов, входящих в область.
 * Идентификатором области служит её имя. При инициализации образа ОСРВ функция (flashmemInit)
 * проверяется корректность информации, заданной пользователем, а именно: отсутствие
 * одноимённых областей, кратность смещения размеру сектора, непересекаемость областей,
 * попадание каждой области в память РПЗУ. Максимальное количество областей равно
 * FLASHMEM_MAX_AREAS. Переменной mlp_flashMemory из структуры modlink_page, присвается
 * указатель на общий описатель памяти РПЗУ (struct flash_memory). Этот описатель
 * содержит следующие переменные:
 * int flags - единичные значения битов 0,1,..,7 указывают о включении области 0 и т.д. в образ.
 * int nsec - число секторов памяти РПЗУ (общий объём памяти РПЗУ).
 * int ssec - размер одного сектора в байтах.
 * char *baseAddr - начальный адрес памяти РПЗУ.
 * Функция int getIndexFlashArea(const char *name) предназначена для получения индекса
 * области по имени области.
 * Функция const struct flashmem_area *getFlashAreaDisc(int ind) по индексу вовращает
 * указатель на описатель области (const struct flashmem_area), этот описатль содержит
 * переменные:
 * int active - 1/0 - область описана в конфигураторе/нет.
 * const char* name - имя области.
 * unsigned int offset - смещение в байтах начала области относительно baseAddr.
 * int count - размер (число секторов) области.
 * Областями памяти в РПЗУ пользуются следующие системные средства:
 * - системный журнал (syslog), если приконфигурировании было задано направлять
 * - журналы в память РПЗУ сообщения в память РПЗУ (logbook system).
 * Работу с памятью РПЗУ в lobook system обеспечивает системный поток, приоритет,
 * которого задаётся в окне "FlashMemory-daemon" ("Приоритет потоа РПЗУ"), при
 * описании областей памяти в РПЗУ  
 */
#include  <version.h>
#if OS_MAJOR == 2
extern void *mlp_flashMemory ;
#endif
#define   FLASHMEM_MAX_AREAS   8  /* максимальное количество областей во flash-памяти */

/* Описатель устройства flash-памяти модуля */
struct flash_memory {
  int flags ;        /* биты 0,1,2,3,4,5,6,7 - соответствуют областям flash-памяти */
              /* 0-ое значение бита ошибок не обнарущено 1-ое область не корректна */
  int nsec ;         /* Число секторов флеш-памяти */
  int ssec ;         /* Размер одного сектора */
  char *baseAddr ;   /* Адрес начала флеш-памяти */
} ;

/* Описатель области flash-памяти */
struct flashmem_area {
  int                active;         /* 1/0 - область описана в конфигураторе/нет */
  const char*          name;         /* имя области */
  unsigned long       offset;         /* смещение относительно baseAddr */
  int                 count;         /* число секторов в области */
};

/* Функция flashmemInit - инициализация описателя устройства РПЗУ  */
int flashmemInit(void) ;
#define  SIZE_SIGN         4
#define  SIZE_NUMBER       4
#define  SIZE_SIGN_NUMBER  (SIZE_SIGN + SIZE_NUMBER)
#define  SIZE_FLAGS_REALS  4
/*-------------- Функция ППМ: чтение описателя РПЗУ: --------------*/
//void flashInfo(int *nsec, int *ssec,char **base) ;

/*--------- flashmemStart - запуск демона, обслуживающего РПЗУ ----*/
int flashmemStart(struct flash_memory *p_flash, int priority) ;
/* Функция getIndexFlashArea по имени области, возвращает индекс   */
/* описания области в массиве flashsmem_config                     */
int getIndexFlashArea(const char *name) ;
/* Функция getFlashAreaDisc - возвращает указатель на описатель    */
/* области памяти в РПЗУ (flash-памяти)                            */
const struct flashmem_area *getFlashAreaDisc(int ind) ;

#endif /* _PUBLIC_FLASHMEM_H */
