#ifndef DEFINE_MSPO_H
#define DEFINE_MSPO_H

//***Булевые переменные***
#define TRUE	1
#define FALSE	0
//************************

//***Временные интервалы***
#define MSEC            1000                // мс в с
#define MKSEC           1000000             // мкс в с
#define NSEC            1000000000          // нс в с
#define TACT_PP_HZ      10                  // Частота работы такта MСПО в ПП (10 Гц = 0.100 c)
#define TACT_OR_HZ      10                  // Частота работы такта MСПО в ОР (10 Гц = 0.100 c)
#define TIME_TACT_PP	1.0 / TACT_PP_HZ	// Время работы такта СПО БЦ-61 (100.0 мс = 1 / 10)
#define TIME_TACT_OR	1.0 / TACT_OR_HZ	// Время работы такта СПО БЦ-61 (100.0 мс = 1 / 10)

#define GET_ME_TIME(ui1007h)    ((ui1007h >> 20) * 1000000.0 + ((ui1007h >> 1) & 0x0007FFFF) * 3.2) / 1000000.

#define TIME_PUT_USL3       0               // Начальное время формирования сообщения С1 с Усл3
#define TIME_PUT_M1         1               // Начальное время формирования сообщения С1 с Усл3 и массивом М1
#define TIME_PUT_CMD_RLI    2               // Начальное время формирования сообщения С1 с командой на формирование И
#define TIME_PUT_MN         3               // Начальное время формирования команды на алгоритмы
//**************************

//***Битовые операции***
#define BIT_ON(Data, NumBit)	Data | (1 << NumBit)                            // Установить нужный бит в 1 (нумерация разрядов с 0)
#define BIT_OFF(Data, NumBit)	Data & ~(1 << NumBit)                           // Установить нужный бит в 0 (нумерация разрядов с 0)
#define BIT_ISON(Data, NumBit)	((Data & (1 << NumBit)) != 0)                   // Проверить значаение бита на 1 (нумерация разрядов с 0)
#define SWAP_UI(uiParam)        ((uiParam << 16) | ((uiParam >> 16) & 0xFFFF))  // Переставить 2 байта в 32-х разрядном параметре
#define SWAP_US(usParam)        ((usParam << 8) | ((usParam >> 8) & 0xFF))      // Переставить байты в 16-х разрядном параметре
//**********************

//***Инициализация МКИО-канала БЦВС***
#define X1				1				// БЦВС-М работает по Х1
#define X2				2				// БЦВС-М работает по Х2
#define X3				3				// БЦВС-М работает по Х3
#define X4				4				// БЦВС-М работает по Х4
#define MKIO_CANAL_M2	X2				// Канал по которому будем работать с СУС
#define MKIO_CANAL_M3	X3				// Канал по которому будем работать с ...
//************************************

//***ЦМР***
#define CMR_RAD			(M_PI * pow(2.0f, -31))
#define CMR_GRAD		(180.0f * pow(2.0f, -31))
#define CMR_XYZ			pow(10.0f, -2)
//*********

//***Перевод ГРАДУСЫ <-> РАДИАНЫ***
#define RAD2GRAD(x)	(x) * 180.0 / M_PI
#define GRAD2RAD(x)	(x) * M_PI / 180.0
//*********************************

//***Инициализация размера ТЛМ в байтах***
#define SIZE_TLM_TITLE_BCVSM		36								// Заголовок ТМИ
#define SIZE_TLM_DATA_BCVSM			412								// Внутренние данные ТМИ
                                                                    //  4 байта     - заголовок
                                                                    //  2 байта     - размер
                                                                    //  402 байта    - ТМИ
                                                                    //  4 байта     - заголовок
#define SIZE_TLM_BCVSM_OZU2         18                              // Заголовок
#define SIZE_TLM_DATA_BCVSM_OZU2    694                             // Внутренние данные ТМИ

#define SIZE_TLM_OZU1			    SIZE_TLM_TITLE_BCVSM + SIZE_TLM_DATA_BCVSM    // Размер всей ТЛМ кадра для ОЗУ1
#define SIZE_TLM_OZU2               SIZE_TLM_BCVSM_OZU2 + SIZE_TLM_DATA_BCVSM_OZU2        // Размер всей ТЛМ кадра для ОЗУ2
//****************************************

//***Маркеры ТМ-параметров МСПО***
#define MARKER_KADR_1       0x01010101
#define MARKER_KADR_2       0x02020202
#define MARKER_KADR_3       0x03030303

#define MARKER_KADR_OZU2_1  0xB1B1B1B1
#define MARKER_KADR_OZU2_2  0xB2B2B2B2
#define MARKER_KADR_OZU2_3  0xB3B3B3B3

#define MARKER_DATA_BCVSM   0xBC00BC00

#define MARKER_M0           0x00010001
#define MARKER_VM0          0x10001000
//********************************

//***Параметры для работы с MRAM***
//|0------------127|128---131|132------2 097 147|2 097 148----4 194 300|
//|_______128______|____4____|____2 097 016_____|______2 097 156_______| -- байты
//|   Черный ящик  |  Инфо   | Данные области 1 |  Данные области 2    |
//|0x00000--0x0001F| 0x00020 |0x00021----0x7FFFE|0x7FFFF--------0xFFFFF|
//|00------------31|   32    |33          524286|524287         1048575| -- номера пакетов MRAM

#define REGMUV_STATE      0   // Данные о состоянии МСПО   - 0 бит
#define REGMUV_ID         2   // Данные ИД записаны        - 2 бит

#define IDMUV_NULL        0   // Обнулить данные о состоянии МСПО
#define IDMUV_STATE       1   // Записать данные о состоянии МСПО

#define MUV_ADR_REG       0x00020 // Адрес расположения регистра МУВ МСПО  (Размер =   4 байта)
#define MUV_ADR_STATE     0x00021 // Адрес расположения состояния МСПО (Размер = 256 байт)
#define MUV_ADR_ID        0x000A1 // Адрес расположения ИД             (Размер = > 1 Мб)
//*********************************

//***Тип ИД от СУС***
#define ID_MAX_SIZE    1048576  // 1 Мб = 1024 кб = 1048576 байт (524288 СД по МКИО)
#define ID_GET_ON      0x5B6D	// Готовность принимать данные от СУС
#define ID_PR          0x0009	// Идентификатор ИД
#define ID_MAK         0x314B
#define ID_START_SEND  0x0004	// Начало выдачи ИД СУСом
#define ID_STOP_SEND   0x0005	// Конец выдачи ИД СУСом
#define ID_OK          0x5555	// УСПЕШНЫЙ ввод ИД СУСом
#define ID_ERROR       0x0666	// НЕУСПЕШНЫЙ ввод ИД СУСом
//**************************

//***Настройки Ethernet***
#define PORT_BCVSM	16386		// Порт БЦВС-М который открываем на прослушку
#define IP_RK	    "22.0.0.222"// IP-адрес РК
#define PORT_RK 	32769		// Порт РК, в который будем отправлять данные
#define SIZE_UDP	1474		// Размер в байтах поля данных дейтаграммы (43-1516 байт)

#define C1_POS_VM	22			// Позиция расположения ВМ в пакете С1
#define C3_POS_VM	12			// Позиция расположения ВМ в пакете С3

#define TYPE_C1		0x00C1		// Тип сообщения С1
#define TYPE_C2		0x00C2		// Тип сообщения С2
#define TYPE_C3		0x00C3		// Тип сообщения С3
//************************

//***Регистр инициализации MСПО***
#define INITIALSPO_OK	0x03FF			    // Если 0-9 биты в "1"
//*************************************

//***Возвращаемые значения функции ЛВД МСПО в режиме ПП***
#define LVD_PP_WORK				0	// ЛВД МСПО в режиме ПП работает
#define LVD_PP_FINISH			1	// ЛВД МСПО в режиме ПП завершилось
//*************************************************************

//***Возвращаемые значения функции ЛВД МСПО в режиме ОР***
#define LVD_OR_WORK			0	// ЛВД МСПО в режиме ОР работает
#define LVD_OR_STOP			2	// ЛВД МСПО в режиме ОР остановили
//*****************************************************************

//***Возвращаемые значения функции формирования ОС11***
#define CREATEOC11_TRUE		1	// Ответное сообщение ОС11 сфорировано
#define CREATEOC11_FALSE	0	// Ответное сообщение ОС11 не сфорировано
//*****************************************************

//***Управляющие слова (в РК)***
#define	_USL0_			255		// Самоконтроль
#define	_USL3_			3		// Готовность к работе
#define	_USL9_			9		// Получение И
#define	_USL11_			11		// Прием И
#define	_USL12_			12		// Повторная передача И
#define	_USL13_			13		// Данные И получены
#define	_USL16_			16		// Завершение работы
//**************************************

//***Информационные слова РК (в БЦВС-М)***
#define _ISL1		1	// Выполнение сокращенного самоконтроля
#define _ISL2		2	// Выполнение расширенного самоконтроля
#define _ISL3		3	// Самоконтроль завершен
#define _ISL6		6	// Ожидание команды
#define _ISL13	    13	// Обзор
#define _ISL14	    14	// И готовы
#define _ISL15	    15	// Поиск
#define _ISL16	    16	// Передача элемента И
#define _ISL17	    17	// Элемент И передан полностью
#define _ISL19  	19	// Работа завершена
//*****************************************

//***Константы обзора***
#define RLI_SIZE                256 * 256	// Размер изображения от системы 3Б222
#define RLI_CNT_ROWS_CLUSTER    2           // Кол-во строк в кластере
#define RLI_TYPE_AMP            111			// Амплитудное изображение суммарный канал
//**********************

#endif	// DEFINE_MSPO_H
